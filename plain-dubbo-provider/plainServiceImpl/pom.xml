<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.toulezu.service.impl</groupId>
	<artifactId>plainServiceImpl</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>plainServiceImpl</name>
	<url>http://maven.apache.org</url>

	<properties>
		<spring.version>3.2.8.RELEASE</spring.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- dubbo -->
		<!-- <dependency> <groupId>com.alibaba</groupId> <artifactId>dubbo</artifactId> 
			<version>2.8.3</version> </dependency> <dependency> <groupId>org.javassist</groupId> 
			<artifactId>javassist</artifactId> <version>3.19.0-GA</version> </dependency> 
			<dependency> <groupId>org.jboss.netty</groupId> <artifactId>netty</artifactId> 
			<version>3.2.5.Final</version> </dependency> <dependency> <groupId>com.101tec</groupId> 
			<artifactId>zkclient</artifactId> <version>0.6</version> </dependency> <dependency> 
			<groupId>com.esotericsoftware.kryo</groupId> <artifactId>kryo</artifactId> 
			<version>2.24.0</version> </dependency> <dependency> <groupId>de.javakaffee</groupId> 
			<artifactId>kryo-serializers</artifactId> <version>0.27</version> </dependency> -->

		<!-- spring 相关 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<version>1.6.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>1.3.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring 相关 -->

		<dependency>
			<groupId>com.toulezu.service</groupId>
			<artifactId>plainService</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

	</dependencies>

	<build>
		<!-- 增加下面这个配置测试的时候，在编译项目的情况下会将pom的profile配置更新到src/main/resources目录下的文件中 -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*/*</include>
					<include>*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<!-- 增加下面这个配置测试的时候，在编译项目的情况下会将pom的profile配置更新到src/test/resources目录下的文件中 -->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>*/*</include>
					<include>*</include>
				</includes>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					注意，这里include只是不让maven把resource打到jar包里面
					<includes>
						<include>com/**</include>
					</includes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.toulezu.service.deploy.Start</mainClass>
						</manifest>
						<manifestEntries>
                            <!-- 在Class-Path下添加配置文件的路径 -->
                            <Class-Path>conf/</Class-Path>
                        </manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- http://maven.apache.org/plugins/maven-assembly-plugin/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>make-binary-pacakge</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<encoding>${project.build.sourceEncoding}</encoding>
							<appendAssemblyId>false</appendAssemblyId>
							<finalName>plainServiceImpl</finalName>
							<descriptors>
								<descriptor>src/main/resources/bin-assemble-descriptor.xml</descriptor>
							</descriptors>

						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- 通过 profile 在打包的时候生成不同的环境 -->
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- 提供服务 -->
				<dubbo.registry.address>192.168.32.202:2181</dubbo.registry.address>
				<!-- dubbo -->
				<dubbo.application.name>test-test-server</dubbo.application.name>
				<dubbo.application.owner>tester</dubbo.application.owner>
				<dubbo.registry.protocol>zookeeper</dubbo.registry.protocol>
				<dubbo.protocol.name>dubbo</dubbo.protocol.name>
				<dubbo.protocol.port>20210</dubbo.protocol.port>

				<!-- 日志 -->
				<log.root.level>DEBUG</log.root.level>
				<log.root.name>Service</log.root.name>
				<log.special>Console</log.special>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
				<!-- 提供服务 -->
				<dubbo.registry.address>192.168.37.85:2181</dubbo.registry.address>
				<!-- dubbo -->
				<dubbo.application.name>test-test-server</dubbo.application.name>
				<dubbo.application.owner>tester</dubbo.application.owner>
				<dubbo.registry.protocol>zookeeper</dubbo.registry.protocol>
				<dubbo.protocol.name>dubbo</dubbo.protocol.name>
				<dubbo.protocol.port>20210</dubbo.protocol.port>

				<!-- 日志 -->
				<log.root.level>DEBUG</log.root.level>
				<log.root.name>Service</log.root.name>
				<log.special>Console</log.special>
			</properties>
		</profile>
		<profile>
			<id>prd</id>
			<properties>
				<!-- 提供服务 -->
				<dubbo.registry.address>192.168.32.202:2181</dubbo.registry.address>
				<!-- dubbo -->
				<dubbo.application.name>test-test-server</dubbo.application.name>
				<dubbo.application.owner>tester</dubbo.application.owner>
				<dubbo.registry.protocol>zookeeper</dubbo.registry.protocol>
				<dubbo.protocol.name>dubbo</dubbo.protocol.name>
				<dubbo.protocol.port>20210</dubbo.protocol.port>

				<!-- 日志 -->
				<log.root.level>DEBUG</log.root.level>
				<log.root.name>Service</log.root.name>
				<log.special>Console</log.special>
			</properties>
		</profile>
	</profiles>
</project>
